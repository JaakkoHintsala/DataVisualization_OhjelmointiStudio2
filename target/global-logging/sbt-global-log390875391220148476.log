[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\JSH\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\JSH\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 144.4023ms
[debug]       Load.loadUnit: defsScala took 0.3383ms
[debug] [Loading] Scanning directory C:\Users\JSH\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JSH\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.7733 ms
[debug]           Load.resolveProject(global-plugins) took 65.0386ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\JSH\.sbt\1.0\plugins, plugins: List(<none>))) took 129.5347ms
[debug] [Loading] Done in C:\Users\JSH\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 157.8882ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3079ms
[debug]     Load.loadUnit(file:/C:/Users/JSH/.sbt/1.0/plugins/, ...) took 314.7333ms
[debug]   Load.apply: load took 620.9158ms
[debug]   Load.apply: resolveProjects took 8.2665ms
[debug]   Load.apply: finalTransforms took 67.1712ms
[debug]   Load.apply: config.delegates took 9.4851ms
[debug]   Load.apply: Def.make(settings)... took 2562.0325ms
[debug]   Load.apply: structureIndex took 137.2649ms
[debug]   Load.apply: mkStreams took 2.1546ms
[info] loading global plugins from C:\Users\JSH\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6662.3175ms
[debug]           Load.loadUnit: plugins took 37.6347ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\JSH\IdeaProjects\studio2_projekti\project
[debug]             Load.loadUnit: mkEval took 12.4083ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JSH\IdeaProjects\studio2_projekti\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7016 ms
[info] loading settings for project studio2_projekti-build from idea.sbt ...
[debug]               Load.resolveProject(studio2_projekti-build) took 8.8501ms
[debug]             Load.loadTransitive: finalizeProject(Project(id studio2_projekti-build, base: C:\Users\JSH\IdeaProjects\studio2_projekti\project, plugins: List(<none>))) took 11.3015ms
[debug] [Loading] Done in C:\Users\JSH\IdeaProjects\studio2_projekti\project, returning: (studio2_projekti-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3323.1902ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3058ms
[debug]         Load.loadUnit(file:/C:/Users/JSH/IdeaProjects/studio2_projekti/project/, ...) took 3368.6193ms
[debug]       Load.apply: load took 3370.551ms
[debug]       Load.apply: resolveProjects took 0.1234ms
[debug]       Load.apply: finalTransforms took 8.6158ms
[debug]       Load.apply: config.delegates took 0.5687ms
[debug]       Load.apply: Def.make(settings)... took 94.2844ms
[debug]       Load.apply: structureIndex took 44.8973ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\JSH\IdeaProjects\studio2_projekti\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6653.499ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\JSH\IdeaProjects\studio2_projekti
[debug]       Load.loadUnit: mkEval took 0.666ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\JSH\IdeaProjects\studio2_projekti, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.027 ms
[info] loading settings for project studio2_projekti from build.sbt ...
[debug]         Load.resolveProject(studio2_projekti) took 37.9882ms
[debug]       Load.loadTransitive: finalizeProject(Project(id studio2_projekti, base: C:\Users\JSH\IdeaProjects\studio2_projekti, plugins: List(<none>))) took 41.2955ms
[debug] [Loading] Done in C:\Users\JSH\IdeaProjects\studio2_projekti, returning: (studio2_projekti)
[debug]     Load.loadUnit: loadedProjectsRaw took 2067.4493ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.4951ms
[debug]   Load.loadUnit(file:/C:/Users/JSH/IdeaProjects/studio2_projekti/, ...) took 8748.5367ms
[debug] Load.apply: load took 8751.3673ms
[debug] Load.apply: resolveProjects took 0.3395ms
[debug] Load.apply: finalTransforms took 31.1014ms
[debug] Load.apply: config.delegates took 0.3423ms
[debug] Load.apply: Def.make(settings)... took 95.8593ms
[debug] Load.apply: structureIndex took 23.1687ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to studio2_projekti (in build file:/C:/Users/JSH/IdeaProjects/studio2_projekti/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63272 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63272, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to studio2_projekti (in build file:/C:/Users/JSH/IdeaProjects/studio2_projekti/)
[debug] > Exec(idea-shell, None, None)
